{"version":3,"sources":["file:///C:/work/flw/src/utils.ts","https://deno.land/std@0.97.0/encoding/base64.ts","file:///C:/work/flw/src/decoder.ts","file:///C:/work/flw/src/flowers.ts","file:///C:/work/flw/src/gift.ts"],"sourcesContent":["export const el = document.createElement.bind(document)","// Copyright 2018-2021 the Deno authors. All rights reserved. MIT license.\n\n// deno-fmt-ignore\nconst base64abc = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \n  \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"a\", \n  \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \n  \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"0\", \"1\", \"2\", \"3\", \"4\", \n  \"5\", \"6\", \"7\", \"8\", \"9\", \"+\", \"/\"];\n\n/**\n * CREDIT: https://gist.github.com/enepomnyaschih/72c423f727d395eeaa09697058238727\n * Encodes a given Uint8Array, ArrayBuffer or string into RFC4648 base64 representation\n * @param data\n */\nexport function encode(data: ArrayBuffer | string): string {\n  const uint8 = typeof data === \"string\"\n    ? new TextEncoder().encode(data)\n    : data instanceof Uint8Array\n    ? data\n    : new Uint8Array(data);\n  let result = \"\",\n    i;\n  const l = uint8.length;\n  for (i = 2; i < l; i += 3) {\n    result += base64abc[uint8[i - 2] >> 2];\n    result += base64abc[((uint8[i - 2] & 0x03) << 4) | (uint8[i - 1] >> 4)];\n    result += base64abc[((uint8[i - 1] & 0x0f) << 2) | (uint8[i] >> 6)];\n    result += base64abc[uint8[i] & 0x3f];\n  }\n  if (i === l + 1) {\n    // 1 octet yet to write\n    result += base64abc[uint8[i - 2] >> 2];\n    result += base64abc[(uint8[i - 2] & 0x03) << 4];\n    result += \"==\";\n  }\n  if (i === l) {\n    // 2 octets yet to write\n    result += base64abc[uint8[i - 2] >> 2];\n    result += base64abc[((uint8[i - 2] & 0x03) << 4) | (uint8[i - 1] >> 4)];\n    result += base64abc[(uint8[i - 1] & 0x0f) << 2];\n    result += \"=\";\n  }\n  return result;\n}\n\n/**\n * Decodes a given RFC4648 base64 encoded string\n * @param b64\n */\nexport function decode(b64: string): Uint8Array {\n  const binString = atob(b64);\n  const size = binString.length;\n  const bytes = new Uint8Array(size);\n  for (let i = 0; i < size; i++) {\n    bytes[i] = binString.charCodeAt(i);\n  }\n  return bytes;\n}\n","import {\r\n    decode as decodeBase64,\r\n  } from \"https://deno.land/std@0.97.0/encoding/base64.ts\";\r\n\r\n\r\nexport class Decoder {\r\n    private buf:Uint8Array\r\n    private dv:DataView\r\n    private offset = 0\r\n\r\n    constructor(data:string) {\r\n        const changes:any = { \"-\": \"+\", \"_\": \"/\", \".\": \"=\" } // replaces some urlencode safe chars to base64 chars\r\n        data = data.replace(/\\-|\\_|\\./g, match => changes[match])\r\n        this.buf = decodeBase64(data)\r\n        this.dv = new DataView(this.buf.buffer, this.buf.byteOffset)\r\n    }\r\n\r\n    readVLI() {\r\n        // see: https://en.wikipedia.org/wiki/LEB128\r\n        let b = 0\r\n        var shift = 0     // Bit shift for next read in output\r\n        var num = 0\r\n        do {\r\n            b = this.dv.getUint8(this.offset++)\r\n            num = num | ((b & 0x7f) << shift) // least signifigant 7 bits first, ms7bits last\r\n    \r\n            shift += 7\r\n        } while ((b & 0x80) != 0)  // has more data\r\n        if (!(b&0x40) || shift >= 32)\r\n            return num;\r\n        return (-1 << shift) + num;\r\n    }\r\n\r\n    readString() {\r\n        const len = this.readVLI()\r\n        const s = new TextDecoder().decode(this.buf.subarray(this.offset, this.offset + len))\r\n        this.offset += len\r\n        return s\r\n    }\r\n\r\n    readByte() {\r\n        return this.dv.getUint8(this.offset++)\r\n    }\r\n}\r\n\r\n","import { Decoder } from './decoder.ts'\r\n\r\nexport interface FlowerDesc {\r\n    id:number\r\n    path: string\r\n}\r\n\r\nclass Flowers {\r\n    get length() { return 12 }\r\n    getPath(idx:number) {\r\n        return `img/flower${idx + 1}.svg`\r\n    }\r\n\r\n    *items():Generator<FlowerDesc> {\r\n        const len = this.length\r\n        for (let i = 0; i < len; ++i) \r\n            yield {path: this.getPath(i), id: i}\r\n    }\r\n}\r\n\r\nconst flowers = new Flowers\r\nexport default flowers\r\n\r\nexport interface Action {\r\n    name:string\r\n    params:number[]\r\n}\r\n\r\nexport const actionTypes = [{name: \"delay\", numParams:1}, {name: \"resize\", numParams:2}, {name:\"lifetime\", numParams:1}]\r\n\r\nexport function actionEquals(a1:Action, a2:Action) {\r\n    if (a1.name != a2.name || a1.params.length != a2.params.length) return false\r\n    for (let idx = 0; idx < a1.params.length; ++idx)\r\n        if (a1.params[idx] != a2.params[idx]) return false\r\n    return true\r\n}\r\n\r\nexport function programEquals(p1:Action[], p2:Action[]) {\r\n    if (p1.length != p2.length) return false\r\n    for (let idx = 0; idx < p1.length; ++idx)\r\n        if (!actionEquals(p1[idx], p2[idx])) return false\r\n    return true\r\n}\r\n\r\n// configuration for a flower item to be displayed\r\nexport interface FlowerConfig {\r\n    id:number // id of flower img \r\n    x:number\r\n    y:number\r\n    size:number\r\n    rotate:number\r\n    program:Action[]\r\n}\r\n\r\nexport enum FlowerSettings {\r\n    HasRotate = 1 << 5,\r\n    HasActions = 1 << 6,\r\n    HasAnims = 1 << 7\r\n}\r\n\r\nexport function decodeGift(encoded:string) {\r\n    const decoder = new Decoder(encoded)\r\n    const version = decoder.readVLI()\r\n    const message = decoder.readString()\r\n    const signature = decoder.readString()\r\n    const year = decoder.readVLI()\r\n    const month = decoder.readVLI()\r\n    const day = decoder.readVLI()\r\n    const startDate = new Date(year, month, day)\r\n    \r\n    const numPrograms = decoder.readVLI()\r\n    const programs:Action[][] = []\r\n    for (let i = 0; i < numPrograms; ++i)\r\n        programs.push(decodeProgram(decoder))\r\n\r\n    const numFlowers = decoder.readVLI()\r\n    const flowers:FlowerConfig[] = []\r\n    for (let i = 0; i < numFlowers; ++i) {\r\n        const header = decoder.readByte()\r\n        const id = header & 0x1f\r\n        const x = decoder.readVLI()\r\n        const y = decoder.readVLI()\r\n        const size = decoder.readVLI()\r\n        const rotate = (header & FlowerSettings.HasRotate) ? decoder.readVLI() : 0\r\n        const program = (header & FlowerSettings.HasActions) ? programs[decoder.readVLI()] : []\r\n        flowers.push({id, x, y, size, rotate, program})\r\n    }\r\n    return {\r\n        message,\r\n        signature,\r\n        startDate, flowers\r\n    }\r\n}\r\n\r\nfunction decodeProgram(decoder:Decoder) {\r\n    const prog:Action[] = []\r\n    const len = decoder.readVLI()\r\n    for (let num = 0; num < len; ++num) {\r\n        const desc = decoder.readByte()\r\n        const typeIdx = desc >> 5\r\n        \r\n        const actType = actionTypes[typeIdx]\r\n        const action:Action = { name: actType.name, params:[] }\r\n        const firstParam = desc & 0x1F\r\n        let idx = 0\r\n        if (firstParam < 0x1F) {\r\n            action.params.push(firstParam)\r\n            idx = 1\r\n        }\r\n        for (; idx < actType.numParams; ++ idx)\r\n            action.params.push(decoder.readVLI())\r\n        prog.push(action)\r\n    }\r\n    return prog\r\n}\r\n\r\n\r\n\r\n(globalThis as any).decodeGift = decodeGift","import { el } from './utils.ts'\r\nimport flowerPaths, { decodeGift, FlowerConfig } from './flowers.ts'\r\n\r\nconst canvas = createCanvas()\r\nconst message = el(\"div\")\r\nconst signature = el(\"div\")\r\nconst BASE_WIDTH = 500 // all flower sizes are calculated related to this base size\r\nconst flowers:Flower[] = []\r\nconst giftData = {\r\n    startDate: new Date(),\r\n    ellapsed: undefined as number | undefined\r\n}\r\n\r\nwindow.onload = () => {\r\n    message.classList.add(\"message\", \"text\")\r\n    signature.classList.add(\"signature\", \"text\")\r\n    document.body.append(message, canvas, signature)\r\n    // decode data param from the url, read flowers\r\n    const params = new URLSearchParams(window.location.search)\r\n    const data = params.get(\"data\")\r\n    if (data) {\r\n        try {\r\n            const gift = decodeGift(data)\r\n            \r\n            const ellapsed = params.get(\"days\")\r\n            if (ellapsed)\r\n                giftData.ellapsed = Number.parseFloat(ellapsed)\r\n            else {\r\n                // based on the time remaining display either a gift wrapping, or the flowers\r\n                if (gift.startDate.getTime() > Date.now()) {\r\n                    showGiftWrap(gift.startDate)\r\n                    updateFlowers() // just to update text sizes\r\n                    return\r\n                } \r\n                giftData.startDate = gift.startDate\r\n                startUpdateTimer()\r\n            }\r\n            message.innerText = gift.message\r\n            addFlowers(gift.flowers)\r\n            signature.innerText = gift.signature\r\n        } catch (err) {\r\n            console.log(\":( can't work with data\")\r\n        }\r\n    }\r\n}\r\n\r\nwindow.onresize = () => {\r\n    updateFlowers()\r\n}\r\n\r\nfunction createCanvas() {\r\n    const canvas = el(\"div\")\r\n    canvas.classList.add(\"canvas\")\r\n\r\n    return canvas\r\n}\r\n\r\nfunction showGiftWrap(startDate:Date) {\r\n    const wrap = el(\"div\")\r\n    wrap.classList.add(\"gift-wrap\")\r\n    const img = el(\"img\")\r\n    img.draggable = false\r\n    img.src = \"img/gift1.svg\"\r\n    wrap.append(img)\r\n    message.innerText = \"You received a gift!\"  //insertAdjacentHTML(\"afterbegin\", `<span>You received a gift!</span>`)\r\n    message.append(wrap)\r\n    signature.innerText = `Gift opens at: ${startDate.toDateString()}`\r\n}\r\n\r\nfunction addFlowers(flowerCfgs:FlowerConfig[]) {\r\n    for (const cfg of flowerCfgs) {\r\n        const flower = new Flower(cfg)\r\n        canvas.append(flower.element)\r\n        flowers.push(flower)\r\n    }\r\n    updateFlowers()\r\n}\r\n\r\nfunction startUpdateTimer() {\r\n    setInterval(updateFlowers, 10000)\r\n}\r\n\r\nfunction updateFlowers() {\r\n    const canvasRect = canvas.getBoundingClientRect()\r\n    const ratio = canvasRect.width / BASE_WIDTH\r\n    const ellapsed = giftData.ellapsed ?? (Date.now() - giftData.startDate.getTime()) / (1000 * 3600 * 24)\r\n    let height = 0\r\n    for (const flower of flowers) {\r\n        const props = flower.update(ratio, ellapsed)\r\n        if (props.bottom > height)\r\n            height = props.bottom\r\n    }\r\n    canvas.style.height = `${height * 1.1}px` // add 10% extra padding\r\n\r\n    message.style.fontSize = `${40 * ratio}px`\r\n    signature.style.fontSize = `${18 * ratio}px`\r\n}\r\n\r\nclass Flower {\r\n    element:HTMLElement\r\n\r\n    constructor(private config:FlowerConfig) {\r\n        this.element = el(\"div\")\r\n        this.element.classList.add(\"flower\")\r\n        const img = el(\"img\")\r\n        img.draggable = false\r\n        img.src = flowerPaths.getPath(config.id)\r\n        this.element.appendChild(img)\r\n    }\r\n\r\n    update(ratio:number, daysEllapsed:number = 0) {\r\n        const x = this.config.x * ratio\r\n        const y = this.config.y * ratio\r\n\r\n        const state = this.runProgram(daysEllapsed, {size:this.config.size})\r\n        const size = state.size * ratio\r\n        const style = this.element.style\r\n        if (state.visible) {\r\n            style.display = \"\"\r\n            style.left = `${x - size / 2}px`\r\n            style.top = `${y - size / 2}px`\r\n            style.width = `${size}px`\r\n            style.transform =`rotate(${this.config.rotate}deg)`\r\n        } else {\r\n            style.display = \"none\"\r\n            style.left = `0px`\r\n            style.top = `0px`\r\n        }\r\n\r\n        return { size, top: y - size / 2, bottom: y + size / 2 }\r\n    }\r\n\r\n    private runProgram(ellapsed:number, props:{size:number}) {\r\n        if (ellapsed < 0) ellapsed = 0 // guard against accidental update for not yet opened gifts\r\n        const prog = this.config.program\r\n        let size = props.size\r\n        let visible = true\r\n        const actions:any = {\r\n            delay: (duration:number) => {\r\n                if (ellapsed < duration) {\r\n                    if (i == 0) // first action: until delayed, flower doesn't show\r\n                        visible = false\r\n                }\r\n\r\n                ellapsed -= duration\r\n            },\r\n            resize: (duration:number, targetSize:number) => {\r\n                if (ellapsed < duration) {\r\n                    size += (targetSize - size) * ellapsed / duration \r\n                } else size = targetSize\r\n                ellapsed -= duration\r\n            },\r\n            lifetime: (duration:number) => {\r\n                if (ellapsed >= duration) {\r\n                    visible = false\r\n                }\r\n                ellapsed -= duration\r\n            }\r\n        }\r\n        let i = 0\r\n        for (; i < prog.length && ellapsed >= 0; ++i) {\r\n            const action = prog[i]\r\n            actions[action.name](...action.params)\r\n        }\r\n\r\n        return { visible, size}\r\n    }\r\n}"],"names":[],"mappings":"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"}